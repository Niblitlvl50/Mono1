name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            exe_suffix: ''
          - os: macos-latest
            exe_suffix: ''
          - os: windows-latest
            exe_suffix: '.exe'

    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Install OpenGL, Linux
      if: runner.os == 'Linux'
      run: sudo apt-get install libgl1-mesa-dev

    - name: Install SDL2, Linux, macOS
      if: runner.os == 'Linux' || runner.os == 'macOS'
      run: |
        wget https://www.libsdl.org/release/SDL2-2.0.10.tar.gz -O sdl2.tar.gz
        tar xzf sdl2.tar.gz
        pushd SDL2-2.0.10 && ./configure && make && sudo make install && popd

    - name: Install SDL2, Windows
      if: runner.os == 'Windows'
      run: |
        curl.exe --output sdl2.zip --url https://www.libsdl.org/release/SDL2-devel-2.0.10-VC.zip
        7z x sdl2.zip

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      env:
        SDL2DIR: ${{github.workspace}}/SDL2-2.0.10/
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}
      run: ./bin/unittest${{ matrix.exe_suffix }}
